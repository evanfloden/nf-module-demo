// **Nextflow readMapping module**
// Sailfish component configuration
//
// Commandline options taken from: `sailfish v0.10.1`
// Tested with container: `quay.io/biocontainers/sailfish:0.10.1--1`
//

// Set the default Container
params {
  modules {
    readMapping {
      sailfish {
        container = "quay.io/biocontainers/sailfish:0.10.1--1" 
      }
    }
  }
}

// Set the default commandline option
params {
  modules {
    readMapping {
      sailfish {
        quantification {
          commandlineOptions {
         // name               = [applied, default value, commandline option,    type,     description ]
            libType            = [true,    'MSF',         '--libType',           'STRING', 'String describing the library type']
            numThreads         = [false,   1,             '--numThreads',        'INT',    'Number of threads']
            geneMap            = [false,   'FILE',        '--geneMap',           'FILE',   'File containing a mapping of transcripts to genes']
            biasCorrect        = [false,   false,         '--biasCorrect',       'BOOL',   'Perform sequence-specific bias correction']
            gcBiasCorrect      = [false,   false,         '--gcBiasCorrect',     'BOOL',   'Number of threads']
            useVBOpt           = [false,   false,         '--useVBOpt',          'BOOL',   'Use Variational Bayesian EM algorithm']
            numBootstraps      = [false,   0,             '--numBootstraps',     'INT',    'Number of Bootstrap Sampling Rounds to perform']
            numGibbsSample     = [false,   0,             '--numGibbsSample',    'INT',    'Number of Gibbs Sampling Rounds to perform']
          }
        }
      }
    }
  }
}

params {
  modules {
    readMapping {
      sailfish {
        index {
          commandlineOptions { 
         // name               = [applied, default value, commandline option, type,     description ]  
            kmerSize           = [false,   31,            '--kmerSize',       'INT',    'k-mer length']
          }
        }
      }
    }
  }
}
